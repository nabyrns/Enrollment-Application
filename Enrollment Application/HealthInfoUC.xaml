<UserControl x:Class="Enrollment_Application.HealthInfoUC"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Enrollment_Application"
             mc:Ignorable="d" 
             d:DesignHeight="580" d:DesignWidth="1020" FontSize="14" FontFamily="Candara Light" DataContext="">
    
    
    <Grid x:Name="textFields">

        <!--Everything in the UC is data bound to display already saved values-->
        <!--This also allows for text validation by changing the DataContext in the code behind if there are errors found-->

        <!--#region Stack panel holding all the text stack panels that contain all the info for the user control-->
        <StackPanel>
            <TextBlock Text="Health Information" HorizontalAlignment="Center" Foreground="#2196f3" FontSize="24"/>

            <!--#region First row of UC-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10, 3, 0, 0">
                <TextBlock Text="Primary Physician:" Foreground="GhostWhite" Margin="0, 20, 0, 0"/>
                <TextBox x:Name="primaryPhysText" Width="150" Margin="10" Text="{Binding primaryPhysician, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Text="Phone Number:" Foreground="GhostWhite" Margin="0, 20, 0, 0"/>
                <TextBox x:Name="primaryPhysPhoneText" Width="150" Margin="10" Text="{Binding pPhysicianPhoneNum, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Text="Other Physician:" Foreground="GhostWhite" Margin="0, 20, 0, 0"/>
                <TextBox x:Name="oPhysicianText" Width="50" Margin="10" Text="{Binding otherPhysician, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Text="Phone Number:" Foreground="GhostWhite" Margin="0, 20, 0, 0"/>
                <TextBox x:Name="oPhysicianPhoneNum" Width="150" Margin="10" Text="{Binding oPhysicianPhoneNum, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <!--#endregion-->

            <!--#region Diabetes-->
            <StackPanel Orientation="Horizontal" Margin="10, 3, 0, 0" HorizontalAlignment="Left">
                <TextBlock Text="Diabetes:" Margin="0, 20, 0, 0" Foreground="GhostWhite"/>
                <ComboBox Name="diabetesCombo" Width="100" Margin="10, 0, 10, 0" Text="{Binding diabetesType, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBoxItem Content="None"/>
                    <ComboBoxItem Content="Type I"/>
                    <ComboBoxItem Content="Type II"/>
                </ComboBox>
            </StackPanel>
            <!--#endregion-->

            <!--#region Third row of UC-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10, 3, 0, 0">
                <TextBlock Text="Allergies:" Foreground="GhostWhite" Margin="0, 20, 0, 0"/>
                <TextBox x:Name="allergiesText" Width="200" Margin="10, 0, 10, 0" TextWrapping="Wrap" Text="{Binding allergies, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Text="Heart Conditions:" Foreground="GhostWhite" Margin="0, 20, 0, 0"/>
                <TextBox x:Name="heartConditionsText" Width="200" Text="{Binding heartIssues, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <!--#endregion-->

            <!--#region Fourth row of UC-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10, 3, 0, 0">
                <TextBlock Text="Check relevant condition(s):" Foreground="GhostWhite" Margin="0, 20, 0, 0"/>
                <CheckBox x:Name="metabolicCheck" Content="Metabolic" Margin="10, 0, 10, 0" Foreground="GhostWhite" IsChecked="{Binding metabolic, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox x:Name="jointMuscleCheck" Content="Joint/Muscle" Margin="10, 0, 10, 0" Foreground="GhostWhite" IsChecked="{Binding jointMuscle, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox x:Name="chronicIllnessCheck" Content="Chronic Illness" Margin="10, 0, 10, 0" Foreground="GhostWhite" IsChecked="{Binding chronicIllness, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox x:Name="migrainesCheck" Content="Migraines" Margin="10, 0, 10, 0" Foreground="GhostWhite" IsChecked="{Binding migraines, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox x:Name="neurologicalCheck" Content="Neurological" Margin="10, 0, 10, 0" Foreground="GhostWhite" IsChecked="{Binding neurological, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox x:Name="pulmonaryCheck" Content="Pulmonary" Margin="10, 0, 10, 0" Foreground="GhostWhite" IsChecked="{Binding pulmonary, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox x:Name="asthmaCheck" Content="Asthma" Margin="10, 0, 10, 0" Foreground="GhostWhite" IsChecked="{Binding asthma, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
                <CheckBox x:Name="otherCheck" Content="Other" Margin="10, 0, 10, 0" Foreground="GhostWhite" IsChecked="{Binding other, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <!--#endregion-->

            <!--#region Fifth row of UC-->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="10, 3, 0, 0">
                <TextBlock Text="List any medications the student will be carrying other than inhaled medications: " Foreground="GhostWhite" Margin="0, 20, 0, 0"/>
                <TextBox x:Name="otherMedsText" Width="450" Margin="10, 0, 10, 0" TextWrapping="Wrap" Text="{Binding otherMeds, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <!--#endregion-->

            <TextBlock Text="NOTE: Canadian Valley Technology Center employees are trained in CPR and First Aid. If an emergency occurs that requires immediate medical care, we will administer first aid, call 911(if necessary), and contact you as soon as possible. Unless we are informed otherwise, we assume you give permission to school officials to authorize emergency care as deemed necessary. We recommend all students have medical coverage and we will provide information on how to obtain school insurance through a third party. The school district will not be responsible for medical care costs or treatment." Foreground="GhostWhite" TextWrapping="Wrap" Margin="10, 3, 0, 0"/>

            <!--#region Specific First Aid needs-->
            <StackPanel Orientation="Horizontal" Margin="10, 3, 0, 0">
                <TextBlock Text="Specific first aid needs for medical conditions: " Foreground="GhostWhite" Margin="0, 20, 0, 0"/>
                <TextBox x:Name="specificNeedsText" Width="450" Margin="10, 0, 10, 0" TextWrapping="Wrap" Text="{Binding specificFirstAidNeeds, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"/>
            </StackPanel>
            <!--#endregion-->

            <TextBlock Text="In case of severe injury or acute illness, the student will be transported immediately to Integris Canadian Valley Regional Hospital in Yukon. Another hospital may be requested only with the understanding that assessment of the medical emergency by the ambulance attendants will determine if the patient can be transported to another medical facility. School officials may choose, at their discretion, to immediately transport the student to a medical facility in a school vehicle. The above information is needed to assure medical emergencies are handled appropriately and/or that necessary accomodations are identified and provided. Provision of this information will not affect the status of the student's enrollment. Please contact Student Services if there are changes to the Emergency Health Information form during the year." Foreground="GhostWhite" Margin="10, 3, 0, 0" TextWrapping="Wrap"/>


            <StackPanel Orientation="Horizontal" Margin="10, 3, 0, 0">
                <TextBlock Text="A school representative has permission to authorize medical treatment as needed: " Foreground="GhostWhite" Margin="0, 20, 0, 0"/>
                <ComboBox Name="treatmentPermissionCombo" Width="100" Text="{Binding repPermissionForTreatment, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBoxItem Content="Yes"/>
                    <ComboBoxItem Content="No"/>
                </ComboBox>
            </StackPanel>
        </StackPanel>


        <!--#endregion-->

        <!--#region Button stack panel-->
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <Button x:Name="backBtn" Content="Back" Width="100" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10"/>
            <Button x:Name="nextBtn" Content="Next" Width="100" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10" Click="NextBtn_Click"/>
        </StackPanel>
        <!--#endregion-->
    </Grid>
</UserControl>
